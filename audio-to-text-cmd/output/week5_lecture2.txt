all right for those of you that have taken systems analysis and design some of the things that we talked about in this lecture will be a review for you for those of you that are currently taking it you'll know this. This may serve as a review for the systems analysis and design class but either way everyone in the class has not taken analysis and design and therefore we cannot just come over this material the tight and either enjoys learning or the review that you're about to see
so first we'll start by picking apart the title of this lecture
 I will start with the word requirements requirements are collection of statements that describe the user's needs and desires When developing a software system the requirements must be clearly and fully understood by the software Engineers who developed the Software System remember Project X to find the how of the requirements in the straight into design Road and start working on the solution portion of the requirements is not always thought that is why we tend to gravitate towards the how to start things off when it comes to software projects
 there are specific requirement is a very active elicitation documentation and specification prototype review and validation and agreement and acceptance in this sucks sure if we're going to touch on each one of these activities to put together a plan for requirements engineering the plan should include a process to be used resources needed and a schedule for completing the requirement activities depending on the size capacity of the project the plan itself may take several hours to several days or weeks to develop what's the plan is drawn and must be reviewed and agreed on by all parties involved this agreement and commitment to the plan is extremely important because requirements are not just an imagination of the software designer or developer
 the users and customers must be involved because requirements represent their needs and desires management was also being because resources are required to perform the management from both of the user side and the software development side must be willing to commit to the resources finally the schedule for the requirements engineering activities must be reviewed and agreed on by all participants after the plan is agreed on the resources from experience analyst to required Pro Tools must be acquired the brought on board
 the shown in this image here there are different steps to all participants the process information are then analyzed during the analysis that the various retirement statements are checked for accuracy and koflet rise and prioritize even though there is
 enero analysis and going back to requirements elicitation there is usually very little opportunity to continue going back because of the fastest odds of the availability of the users Who provided the requirements information needs to be taken into account normally have their own jobs to attend to analyze the material is then processed through three potential Central activities and insertion in the middle of the diagram here so we have the requirements definition and documentation we have prototyping and we have a review last evolved finalizing the software requirements specification
 and this is only a preview that has an SRS and this can be an internal software engineering document for the software team and this document will more than likely also serve as a contrast between a customer and the software development organization products for next semester we will actually refer to this document as a statement of work which will be considered as the contract between your team and your client the document is with the customer and once everything is in agreement to the document becomes your base fine there after any modifications or change your class needs to be controlled and managed to through some kind of a chain Control process and this will prevent project scope creeping problems for the project slowly grows in size without anyone's detection of it
 so I don't process has actually recognized the difficulty with requirement changes and requirements Gathering an advocate constant interaction with users requirements are interpreted correctly of not taking the time and effort to gather and understand requirements can be costly and it's not advisable for many reasons throughout these lectures we have been discussing how requirements can cause a project to fail or be successful on this slide we have documented what the requirement documents will assist us with us engineering is not performed correctly that can also be negative consequences there may not be a documents requirements to be able to base your testing on as I mentioned in the last if there's no initial agreement as far as what the requirements happened to be customer
 customer support active sedan have no basis to be developed on and be able to manage the project schedule and cost will be difficult because we were trying to accomplish at the other end of the spectrum are the excessive costs of efforts and other activities that seem bureaucratic and wasteful there are however times when the requirements analyst is asked to develop requirements specification a request for proposal or an RS software suppliers
 how many software Engineers start their careers in coding design or testing system software after they have applied some business and industry domain knowledge the majority of requirements analyst come from the business side with good industry domain knowledge and good communication skills Louis must be a good listener. It is also essential that the analyst possess that has its own unique terminology however it is Impractical to expensive the users and customers to be in constant communication with the Developers for large complex only see software projects will always need the experience subject matter expert requirements analyst for large projects because of the limited availability of knowledgeable you
 there are two bottles of requirement elicitation at the high-level there, salus must probe and understand the business rationale and justification for the software or the software project the low-level the requirements analyst with Alyssa and David the details of the users need and desires the actual elicitation may be conducted in several verbal written maybe even an online form throughout all of the Gathering process the requirements analyst must patient listen carefully and ask for more information when needed vital skills during this phase of the project listen is especially difficult for some requirements analyst who tend to be more outgoing and assertive
 high-level the requirements analyst will need to seek out the management and executive who sponsors the software project to understand the business rationale behind it the business rationale translates into climates in the form of constraints on the software product and software project to this high-level business profile includes opportunities justification scope major constraints what high level problems the saucer suppliers have been rotted and their address
 this is usually a business-oriented problem rather than a purely technical
 turn these high-level requirements into high-level goals
 have them reviewed and agreed on by all constituents
 even when a few detailed requirements baby may be misplaced the project is often a success
 if the high-level business goals are met once the Halo requirements are gathered the detail requirements must be elicited
 other six main categories of information that must be addressed they are individual functionality for Madison information needs such as performance security user interfaces and systems with other interfaces the context of business flow contest deposit user performs their tasks as an important category of information that must be gathered at the detail requirements information level this is similar to the notation of developing use cases in object-oriented methodology factors within some business contacts called a scenario
 another category of requirements that must be collected add to be detail level is the information pertaining to data and data formats at the minimum there must be some discussion of the applications input and output data included in the application systems information is to help tax there should be a statement of how much help text is needed the description of data to the category of user interface has an output of a software system is presented falls in the domain of a user interface today software interfaces are mostly graphical in nature
 the full of the software application is also a user interface of the business flow however there are times the software needs to slay the far from the existing business because the software system is meant to improve the current business process the user interface requirements both look at the flow are often captured by prototyping the interface to review and comment on those Prototype 2 interfaces this with users interfaces such as does with existing applications or toy Network system existing system interface already has many clients ties to it in such cases the requirement statements should not only describe the interface
 the likelihood of future changes there are several Dimensions to this type of interface transfer of control must be able to retry the same actions if if he's all need to be considered a performance security and adaptability this pretty much works as a catch-all for all the non-functional requirements that are important to the project
 he was after the requirements are elicited and collected they are still just an organized set of data analyzed Evans consists of two main tasks categorizing or closed during the requirements and prioritizing the requirements to buy business flow object-oriented disoriented to use cases were actually going to talk about that a little later when we start talking about the definition some we actually looked at an example of a use case
 clustering of business flow data data formats user interface interface to the obvious question is what we should do if we have a requirement that Risky Business love is just the way to make an association of the categories of requirements to each business flow and this business flow must be included in the discussion
 artificial or conjecture the business love so this methodology of business flow as a principal requirement is similar to
 the object-oriented ontology that we're going to talk about
 severe point to orientate definition is a requirement analysis method based on the understanding the customers who pay for the system often have a different perspective on requirements and those who interface with the system on a daily basis for the subcomponents the different users will articulates the requirements with varied as offices and diverse specifics sometimes the same different forms and contacts that they seem to be different requirements other times the difference is that there are many viewpoints to the requirements
 these different viewpoints often results in distinctly different perspectives of the same problem and they are used to help categorize as structure the required Viewpoint oriented requirements definition methodology is divided into four groups identify structure a few points eliminating dislocation and placing common ones together and then he identified the system will provide
 categorizing and clustering requirements is only part of an analysis is to identify and requirements this little problem is that many times has limited resources limited time and limited technical capabilities as part of the requirement analysis task so that the higher priority ones are developed and released to the customer first
 establishing the priority of cloud-based customer needs immediate cells advantages critical problems and existing products and so forth and ties with the help of as many as possible so that you have Collective
 bless this more like a table includes multiple Columns of information as shown here is starts with the requirements for a brief description of self is provided the source of the requirement is important for the planners vs requirements priority along with the source of that requirement contributes to the decision of whether a particular requirements included in the current release next release or some future release this formal approach is frequently used often produces sub-optimal results
 another approach is to pair the requirements and compare their values are this approach called the local hierarchy process or a HP places more regular into the requirements prioritization process of his office I passed by the more marketing-oriented people compared with each of the other requirements in a pairwise fashion and intensity value is assigned to that relationship the requirements with the highest overall intensity values will essentially be the highest priority requirements overall relative intensity events and so on so let's take a look at it a pharmacist requirements 1 2 and 3 the scale or the intensity
 the pairs of requirements is sap from one given a pair of requirements of equal value to it is 2 if x is a little more until you reached where X is to be extremely more valuable than why so is this example we have requirements 1 is equal value to itself is same as requirements to add three so as you see if I can get these smart
 this is where we see
 requirements requirements to become a nurse requirements today so we have the pairs of R1 R1 R2 R2 and R3 are three which are all equal to 1 times more valuable than requirements to value of R1 R2 or request requirements requirements
 Row 1 column to which is to visit the pair requirements to hide the value is just the reciprocal of the pair requirements 1 comments to you so as shown in wrote the intensity value is 1/2 which is the reciprocal of 2 which is a normalized matrix we have to add all the values of the columns and then divide each element in the column of the top table by the sum of that call of the salty by kerser when we add all together
 I would take the number divided by this number and it gives me this number here
 once we have those numbers and we're going to a life table is 1.62 the sum of roads to the rose sounds will then be divided by 3 is for the three values of the requirements of the total
 is worth 16% of the total requirements value and this provides us with a prioritization scheme of requirement East pairwise value prioritization steam forces us to look at the details of Prosecco when we are dealing with tens of thousands of requirement for prioritizing PlayStation of requirements May sometimes be considered as a classification as well or prioritize which requirements will be implemented and released when
 what's the requirements are solicited as Eliza privatizar 3form and reviewing
 requirements definition prototyping interviewing are represented as three Central activities these three centralized come after requirements analysis in practice is actually overlap Alice's and should be viewed as a set of alternative activities within the broader context of analysis involves formally spelling out the requirements the most popular notation that in the industry is uml UniFi model
 that's cuz we haven't actually done over I changed my slides a lot around so we haven't gone over all shapes and sizes Hausman popular is graphically depicting the systems data flow diagram The Entity relationship diagram is used to show the relationship between entities and all of these modeling notations may be used for requirements definition and Analysis as well as for design in fact the preferred approach is to use the same station starting at requirement analysis and continuing to the design of the software
 what are the terms of English process output approach which is just a simple table that is created here you have the requirement what is the input what is the process what is the output
 this is an illustration of the shapes that are used in a data flow diagram is composed the four elements a source or destination of data process to depict a customer order System customer inputs and receives the shipping clerk only receives data from the system orders to process an order process and shipping instructions are sent to the packaging process there are three paper file format later converted to a person with a description
 and that is swallowing so again
 we have the customer customer places an order there's an order process
 it goes into a packaging process shipping labels are sent to the shipping process must have the customers information and also information as far as the inventory on hand fear there is a packaging details the shipping clerk can put everything out in the mail places to order she or she receives an invoice
 spell entity relationship. No flow of information is used to depict relationships among entities is so it's also used to show the attributes of those teeth
 as in the case of the analysis phase and capped through the design phase is the relationship between the objects or entities of author and book the relationship is shown with a line connecting the two objects rights above-the-line the relationship we have two constraints specifies the number of participants an author of several books. Have multiple reality is not true since our text books have multiple authors
 precise the restricted relationship between the author and the books should trigger someone to ask if they're at a requirement specification review time the crows foot represents multiple occurrences one too many and many to many
 a simple example maybe something that shows people sitting in chairs each person sits on only one chair in each chair may be occupied by only one person a one-to-many example is already shown and a relationship can be so that it shows the relationship between the book may be written by several authors which is a little bit more realistic of the relationship specified related to another relationship so it shows that the book is optional because there are authors who have not completed however there is no blood
 servers are mandatory this relationship
 tributes is characteristics that define The Entity or make up the entity Sun employee will have a name and an address Street city state and zip code for outside phone number on there too
 the object-oriented to use cases are utilized to describe promise of a system they're also testing of the system use case is fundamentally a depiction of the following Pharmacy information to any preconditions for the functionality of the scenario for the functionality
 for the functionality
 5 any air conditions for alternative flow
 the term system here means the parts that is to be developed may include both hardware and software what is included and excluded from the system but may still be needed for interacting with the system and object-oriented use case methodology of identifying the following faster service a good requirements analysis methodology later with the details on preconditions post conditions activity flows alternative paths an error processing specified to drain the requirements face describe only what the system mean
 if we consider shipping system questions to ask the system operates and maintains the system other systems use the system and what other systems are used by the system examples of answers
 of the ordering shipping system in an external system that interfaces with it so they could be described as a shipping clerk of the system who packages
 the customer order places the shipping label on it ships order out of the tracks that delivery and then you also have a customer order system this is going to be some external system processes a customer order and provides customer order information to order shipping system now after I did the external system the next to the afters. These activities are the things that the actors wanted the system to perform and become to use cases this each actor is related to a set of use cases the listing of these case is the process of identifying what's inside the system that is
 elements of what the system must perform an example from the order to describe the Seas kiss at a high level
 a shipping label processing so upon request from the shipping clerk process to ship to address from the customer order delivery address on the special label there's also shipping item list processing pasta from the customer order system database and print it out and duplicate copies one to be included in the customer package the other as record to be your high high level definition
 the other social reasons to ensure that requirements are traceable the most tested packaged and delivered it is also important to be able to account for anything extra that is not traceable back to the requirements there should not be any functionalities or properties that are unaccountable there are four types of traceability to the document Source or the person who created it forward from traceability which and implementation there is chords to traceability whistling set design and implementation fact
 events at the relationships between requirements or relationships to design and so forth that's something that you have to stop through
 using various modeling languages such as um l d f d r e r d to the a form of prototyping is this case we are prototypes funktional flow the data flow or the data attributes as part of the requirements Gathering and Analysis the user interfaces that cannot be forgotten here were not interested in the system's internal and the algorithms instead of their interaction with we focus on the main use keys and their interfaces with the users to aspects of user interface must analyze during requirements have visual display an interaction with people and float
 charts and was known as low Fidelity prototyping today prototype Swiss machine executable code during Harvest Gathering and Analysis time in addition to visual interfaces there is a small but growing demands today for also audio video interface has the discussion
 now what's the requirements have been analyzed and review it is prudent to put into the software requirements specification document included in this depends on several parameters such as the next person number of customer support activities knowledge and experience of the developers in the subject to area as essentially
 the guideline specifies that the following materials should be included in the references and definition of terms second a high-level description which will provide a general description of the characteristics physical strength and lastly there should also be output description of interfaces that include user interfaces system interfaces network interfaces and Hardware interfaces there should be a detailed description of performance is a list of design constraints such as standards are Hardware limitations there should be
 the availability and lastly it should also include any additional unique requirements to project
 as the last two steps off a formal document such as a cop or an information communication such as an email regardless of the final form of slide off Baseline for the requirement specification any future changes should be controlled or at least is closely monitored to prevent uncontrolled growth and change in the future and control problems cause for any software project clearest but I want to remind you to please watch all the videos that have been posted also a special note that for you
 I am providing you with a simple requirement specification document now this document is not as detailed as you would need to have the same time also providing you with a phial of different user scenarios scenarios are those that come up with from speaking with a client that you don't have to create them as part of your assignment so please be patient that was included to create the documents now just because I'm not having to create these documents is not me that I may not have a test question that asks you to come up with something simpler so please make sure that you fully understand these documents that have been provided to you for your assignment and as always if you have questions concerns or any comments please let me know
